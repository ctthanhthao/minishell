diff --git a/Makefile b/Makefile
index 61605ce..35c4225 100644
--- a/Makefile
+++ b/Makefile
@@ -7,7 +7,8 @@ LDFLAGS 		:= -lreadline
 # Source Files (explicitly listed)
 SRCS    := main.c \
 			helper/utils.c helper/cleanup.c helper/clone.c helper/sort.c helper/ms_ft_strjoin.c  \
-			helper/main_utils.c helper/parse_utils.c helper/tokenizer_utils.c \
+			helper/main_utils.c helper/parse_utils.c helper/parse_utils2.c helper/tokenizer_utils.c \
+			helper/validate_utils.c \
 			input/validation.c       input/parse.c       		input/tokenizer.c 		  input/redir_parse.c \
 			input/handle_expansion.c input/expand_variables1.c  input/expand_variables2.c input/signal.c \
 			input/expand_wildcard.c  \
diff --git a/helper/parse_utils.c b/helper/parse_utils.c
index b4e3917..9dde0e5 100644
--- a/helper/parse_utils.c
+++ b/helper/parse_utils.c
@@ -3,26 +3,20 @@
 /*                                                        :::      ::::::::   */
 /*   parse_utils.c                                      :+:      :+:    :+:   */
 /*                                                    +:+ +:+         +:+     */
-/*   By: thchau <thchau@student.42prague.com>       +#+  +:+       +#+        */
+/*   By: amarcz <amarcz@student.42.fr>              +#+  +:+       +#+        */
 /*                                                +#+#+#+#+#+   +#+           */
 /*   Created: 2025/05/25 12:42:11 by amarcz            #+#    #+#             */
-/*   Updated: 2025/05/28 11:11:12 by thchau           ###   ########.fr       */
+/*   Updated: 2025/05/29 12:10:41 by amarcz           ###   ########.fr       */
 /*                                                                            */
 /* ************************************************************************** */
 
 #include "minishell.h"
 
-int	is_logical_op(char *token)
-{
-	return (ft_strcmp(token, "||") == 0
-		|| ft_strcmp(token, "|") == 0 || ft_strcmp(token, "&&") == 0);
-}
-
 static void	clean_up(char **tokens, t_cmd *head, t_cmd *curr, t_cmd *prev)
 {
 	free_split(tokens);
 	free_cmd(head);
-	if (curr && curr != prev) // not yet linked to head
+	if (curr && curr != prev)
 	{
 		if (curr->argv)
 			free(curr->argv);
@@ -77,16 +71,13 @@ int	handle_token(char **tokens, t_parse_state *s)
 {
 	char	**expanded;
 	int		j;
-	
+
 	if (!init_curr(&s->curr, &s->argv_i, &s->head, &s->prev))
 		return (clean_up(tokens, s->head, s->curr, s->prev), 0);
 	if (is_logical_op(tokens[s->i]))
-	{
-		token_checker(s->curr, tokens[s->i]);
-		token_init(&s->curr, &s->prev, &s->i, s->argv_i);
-		return (2);
-	}
-	if (is_redirection(tokens[s->i]))
+		return (token_checker(s->curr, tokens[s->i]),
+			token_init(&s->curr, &s->prev, &s->i, s->argv_i), 2);
+	if (is_redirection(tokens[s->i]) && !is_quoted(tokens[s->i]))
 	{
 		if (!handle_redirection(s->curr, tokens, &s->i))
 			return (clean_up(tokens, s->head, s->curr, s->prev), -1);
@@ -101,7 +92,7 @@ int	handle_token(char **tokens, t_parse_state *s)
 	if (expanded)
 	{
 		j = 0;
-		while (expanded[j] && expanded[j][0] != '\0')
+		while (expanded[j])
 			s->curr->argv[s->argv_i++] = expanded[j++];
 		free(expanded);
 	}
diff --git a/helper/tokenizer_utils.c b/helper/tokenizer_utils.c
index 67f8b80..6cf58dd 100644
--- a/helper/tokenizer_utils.c
+++ b/helper/tokenizer_utils.c
@@ -6,7 +6,7 @@
 /*   By: amarcz <amarcz@student.42.fr>              +#+  +:+       +#+        */
 /*                                                +#+#+#+#+#+   +#+           */
 /*   Created: 2025/05/25 15:38:33 by amarcz            #+#    #+#             */
-/*   Updated: 2025/05/25 15:57:13 by amarcz           ###   ########.fr       */
+/*   Updated: 2025/05/27 15:14:35 by amarcz           ###   ########.fr       */
 /*                                                                            */
 /* ************************************************************************** */
 
@@ -19,7 +19,7 @@ int	skip_whitespace(const char *input, int i)
 	return (i);
 }
 
-void token_ender(char **tokens, int tokeni)
+void	token_ender(char **tokens, int tokeni)
 {
-    tokens[tokeni] = NULL;
+	tokens[tokeni] = NULL;
 }
diff --git a/include/minishell.h b/include/minishell.h
index 6896615..ca815bd 100644
--- a/include/minishell.h
+++ b/include/minishell.h
@@ -3,10 +3,10 @@
 /*                                                        :::      ::::::::   */
 /*   minishell.h                                        :+:      :+:    :+:   */
 /*                                                    +:+ +:+         +:+     */
-/*   By: thchau <thchau@student.42prague.com>       +#+  +:+       +#+        */
+/*   By: amarcz <amarcz@student.42.fr>              +#+  +:+       +#+        */
 /*                                                +#+#+#+#+#+   +#+           */
 /*   Created: 2025/05/05 11:35:36 by thchau            #+#    #+#             */
-/*   Updated: 2025/05/29 10:02:05 by thchau           ###   ########.fr       */
+/*   Updated: 2025/05/29 12:12:57 by amarcz           ###   ########.fr       */
 /*                                                                            */
 /* ************************************************************************** */
 
@@ -107,7 +107,6 @@ typedef struct s_pid_pipe_fd
 	int		prev_fd;
 	int		pipe_fd[2];
 	int		child_count;
-	
 }	t_pid_pipe_fd;
 
 // ===============================
@@ -115,7 +114,11 @@ typedef struct s_pid_pipe_fd
 // ===============================
 t_cmd	*parse_input(char *input, int last_status, char **envp);
 int		handle_token(char **tokens, t_parse_state *s);
+int		wildcard_check(char **tokens);
+int		check_invalid_chars(const char *input);
+int		check_unclosed_quotes(const char *input);
 char	*complete_input(void);
+int		is_logical_op(char *token);
 void    print_cmds(t_cmd *cmd);
 char    **ft_tokenize(char *input);
 int		skip_whitespace(const char *input, int i);
@@ -123,6 +126,7 @@ void	token_ender(char **tokens, int tokeni);
 int     is_redirection(char *token);
 int    handle_redirection(t_cmd *cmd, char **tokens, int *i);
 int		validate_tokens(char **tokens);
+int		is_quoted(char *token);
 void    free_split(char **arr);
 char    **tokenize_line(const char *line);                            // optional internal
 t_cmd   *build_cmd_list(char **tokens, char **envp);                 // optional internal
diff --git a/input/handle_expansion.c b/input/handle_expansion.c
index 623500c..c19ad3e 100644
--- a/input/handle_expansion.c
+++ b/input/handle_expansion.c
@@ -3,10 +3,10 @@
 /*                                                        :::      ::::::::   */
 /*   handle_expansion.c                                 :+:      :+:    :+:   */
 /*                                                    +:+ +:+         +:+     */
-/*   By: thchau <thchau@student.42prague.com>       +#+  +:+       +#+        */
+/*   By: amarcz <amarcz@student.42.fr>              +#+  +:+       +#+        */
 /*                                                +#+#+#+#+#+   +#+           */
 /*   Created: 2025/05/19 10:23:05 by thchau            #+#    #+#             */
-/*   Updated: 2025/05/28 11:16:25 by thchau           ###   ########.fr       */
+/*   Updated: 2025/05/28 13:50:42 by amarcz           ###   ########.fr       */
 /*                                                                            */
 /* ************************************************************************** */
 
diff --git a/input/parse.c b/input/parse.c
index 6c969a0..71c6827 100644
--- a/input/parse.c
+++ b/input/parse.c
@@ -3,10 +3,10 @@
 /*                                                        :::      ::::::::   */
 /*   parse.c                                            :+:      :+:    :+:   */
 /*                                                    +:+ +:+         +:+     */
-/*   By: thchau <thchau@student.42prague.com>       +#+  +:+       +#+        */
+/*   By: amarcz <amarcz@student.42.fr>              +#+  +:+       +#+        */
 /*                                                +#+#+#+#+#+   +#+           */
 /*   Created: 2025/04/28 14:36:53 by amarcz            #+#    #+#             */
-/*   Updated: 2025/05/29 08:40:19 by thchau           ###   ########.fr       */
+/*   Updated: 2025/05/29 12:13:04 by amarcz           ###   ########.fr       */
 /*                                                                            */
 /* ************************************************************************** */
 
@@ -93,165 +93,18 @@ t_cmd	*token_loop(char **tokens, int argv_i, int last_status, char **envp)
 	return (s.head);
 }
 
-int are_full_quotes(const char *s)
-{
-	int len;
-
-	len = ft_strlen(s);
-	if (len < 2)
-		return (0);
-	if ((s[0] == '\'' && s[len - 1] == '\'') || (s[0] == '"' && s[len - 1] == '"'))
-		return (1);
-	return (0);
-}
-
-int wildcard_check(char **tokens)
-{
-	int i;
-
-	i = 0;
-	while (tokens[i])
-	{
-		if (ft_strchr(tokens[i], '*'))
-		{
-			if (ft_strchr(tokens[i], '\'') || ft_strchr(tokens[i], '\"'))
-			{
-				if(!are_full_quotes(tokens[i]))
-				{
-					ft_printf(R "Dude, WHAT IS THIS?!! ");
-					ft_printf("You can't handle wildcards mixed with quotes like this: %s\n" RST, tokens[i]);
-					return (0);
-				}
-			}
-		}
-		i++;
-	}
-	return (1);
-}
-
-
-int check_unclosed_quotes(const char *input)
-{
-	int i;
-	int single;
-	int dquote;
-
-	i = 0;
-	single = 0;
-	dquote = 0;
-	while (input[i])
-	{
-		if (input[i] == '\'' && dquote % 2 == 0)
-			single++;
-		else if (input[i] == '\"' && single % 2 == 0)
-			dquote++;
-		i++;
-	}
-	if (single % 2 != 0 || dquote % 2 != 0)
-	{
-		if (single % 2 != 0)
-			return (ft_printf(R "Whoa, you messed up! You forgot to close a single quote, Dudio!\n" RST), 0);
-		else
-			return (ft_printf(R "Whoa! You forgot to close a double quote! Pay attention, Bro!\n" RST), 0);
-	}
-	return (1);
-}
-
-//Main parsing function:
 t_cmd	*parse_input(char *input, int last_status, char **envp)
 {
 	char	**tokens;
-	// int		i;
-	// int		j;
 	int		argv_i;
 	t_cmd	*head;
-	// t_cmd	*curr;
-	// t_cmd	*prev;
-	// char 	**expanded;
 
-	if (!check_unclosed_quotes(input))
+	if (!check_unclosed_quotes(input) || !check_invalid_chars(input))
 		return (NULL);
 	tokens = ft_tokenize(input);
 	if (!validate_tokens(tokens) || !tokens || !wildcard_check(tokens))
 		return (free_split(tokens), NULL);
 	argv_i = 0;
-	// curr = NULL;
-	// prev = NULL;
-	// while (tokens[i])
-	// {
-	// 	if (!curr)
-	// 	{
-	// 		curr = malloc(sizeof(t_cmd));
-	// 		if (!curr)
-	// 		{
-	// 			clean_up(tokens, head, curr, prev);
-	// 			return (NULL);
-	// 		}
-	// 		curr->argv = malloc(sizeof(char *) * 1024);
-	// 		if (!curr->argv)
-	// 		{
-	// 			clean_up(tokens, head, curr, prev);
-	// 			return (NULL);
-	// 		}
-	// 		curr->redirs = NULL;
-	// 		curr->next = NULL;
-	// 		curr->next_type = CMD_NONE;
-	// 		argv_i = 0;
-	// 		if (!head)
-	// 			head = curr;
-	// 		else
-	// 			prev->next = curr;
-	// 	}
-	// 	if (ft_strncmp(tokens[i], "||", 2) == 0)
-	// 	{
-	// 		if (curr)
-	// 			curr->next_type = CMD_OR_IF;
-	// 		curr->argv[argv_i] = NULL;
-	// 		i++;
-	// 		prev = curr;
-	// 		curr = NULL;
-	// 		continue ;
-	// 	}
-	// 	else if (ft_strncmp(tokens[i], "|", 1) == 0)
-	// 	{
-	// 		if (curr)
-	// 			curr->next_type = CMD_PIPE;
-	// 		curr->argv[argv_i] = NULL;
-	// 		i++;
-	// 		prev = curr;
-	// 		curr = NULL;
-	// 		continue ;
-	// 	}
-	// 	else if (ft_strncmp(tokens[i], "&&", 2) == 0)
-	// 	{
-	// 		if (curr)
-	// 			curr->next_type = CMD_AND_IF;
-	// 		curr->argv[argv_i] = NULL;
-	// 		i++;
-	// 		prev = curr;
-	// 		curr = NULL;
-	// 		continue ;
-	// 	}
-	// 	if (is_redirection(tokens[i]))
-	// 	{
-	// 		if (!handle_redirection(curr, tokens, &i))
-	// 		{
-	// 			clean_up(tokens, head, curr, prev);
-	// 			return (NULL);
-	// 		}
-	// 		continue ;
-	// 	}
-	// 	expanded = handle_expansion_if_any(tokens[i++], last_status, envp);
-	// 	if (expanded)
-	// 	{
-	// 		j = 0;
-	// 		while (expanded[j])
-	// 			curr->argv[argv_i++] = expanded[j++];
-	// 		free(expanded); // Free the wrapper, not the strings
-	// 	}
-	// }
-	// if (curr)
-	// 	curr->argv[argv_i] = NULL;
 	head = token_loop(tokens, argv_i, last_status, envp);
 	if (!head)
 		return (NULL);
diff --git a/input/redir_parse.c b/input/redir_parse.c
index 720851c..be09a3f 100644
--- a/input/redir_parse.c
+++ b/input/redir_parse.c
@@ -3,10 +3,10 @@
 /*                                                        :::      ::::::::   */
 /*   redir_parse.c                                      :+:      :+:    :+:   */
 /*                                                    +:+ +:+         +:+     */
-/*   By: thchau <thchau@student.42prague.com>       +#+  +:+       +#+        */
+/*   By: amarcz <amarcz@student.42.fr>              +#+  +:+       +#+        */
 /*                                                +#+#+#+#+#+   +#+           */
 /*   Created: 2025/05/06 10:16:48 by amarcz            #+#    #+#             */
-/*   Updated: 2025/05/29 08:40:19 by thchau           ###   ########.fr       */
+/*   Updated: 2025/05/29 12:13:10 by amarcz           ###   ########.fr       */
 /*                                                                            */
 /* ************************************************************************** */
 
diff --git a/input/tokenizer.c b/input/tokenizer.c
index 5fbd5dd..8ed15a3 100644
--- a/input/tokenizer.c
+++ b/input/tokenizer.c
@@ -6,7 +6,7 @@
 /*   By: amarcz <amarcz@student.42.fr>              +#+  +:+       +#+        */
 /*                                                +#+#+#+#+#+   +#+           */
 /*   Created: 2025/05/05 15:50:42 by amarcz            #+#    #+#             */
-/*   Updated: 2025/05/27 11:49:38 by amarcz           ###   ########.fr       */
+/*   Updated: 2025/05/29 12:09:40 by amarcz           ###   ########.fr       */
 /*                                                                            */
 /* ************************************************************************** */
 
@@ -48,11 +48,24 @@ static void	handle_operator(char *input, char **tokens, int *i, int *tokeni)
 static void	handle_word(char *input, char **tokens, int *i, int *tokeni)
 {
 	int	start;
+	char quote;
 
 	start = *i;
 	while (input[*i] && !(input[*i] == ' ' || input[*i] == '\t'
 			|| is_special(input[*i])))
-		(*i)++;
+		{
+			if (input[*i] == '\'' || input[*i] == '\"')
+			{
+				quote = input[*i];
+				(*i)++;
+				while (input[*i] && input[*i] != quote)
+					(*i)++;
+				if (input[*i])
+					(*i)++;
+			}
+			else
+				(*i)++;
+		}
 	tokens[(*tokeni)++] = ft_substr(input, start, *i - start);
 }
 
diff --git a/input/validation.c b/input/validation.c
index 30b970a..6621c7e 100644
--- a/input/validation.c
+++ b/input/validation.c
@@ -6,7 +6,7 @@
 /*   By: amarcz <amarcz@student.42.fr>              +#+  +:+       +#+        */
 /*                                                +#+#+#+#+#+   +#+           */
 /*   Created: 2025/05/07 15:09:11 by amarcz            #+#    #+#             */
-/*   Updated: 2025/05/27 10:59:06 by amarcz           ###   ########.fr       */
+/*   Updated: 2025/05/29 10:44:43 by amarcz           ###   ########.fr       */
 /*                                                                            */
 /* ************************************************************************** */
 
@@ -61,7 +61,7 @@ int	validate_tokens(char **tokens)
 			if (!operator_check(tokens, i))
 				return (0);
 		}
-		else if (is_redirection(tokens[i]))
+		else if (is_redirection(tokens[i]) && !is_quoted(tokens[i]))
 		{
 			if (!tokens[i + 1] || is_operator(tokens[i + 1])
 				|| ft_is_redirection(tokens[i + 1]))
